% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Boot_scan.R
\name{Boot_scan}
\alias{Boot_scan}
\title{Bootstrap scans
Perform a bootstrap of group scans with probabilities derived from a provided adjancecy matrix, to produce a new adjancecy matrix.}
\usage{
Boot_scan(
  Adj,
  total_scan,
  method = c("group", "focal", "both"),
  focal.list = NULL,
  scaled = FALSE,
  mode = c("directed", "undirected", "max", "min", "upper", "lower", "plus"),
  output = c("list", "adjacency"),
  n.cores = (parallel::detectCores() - 1),
  cl = NULL
)
}
\arguments{
\item{Adj}{square integers matrix of occurences of dyads. WIP: implement method for association matrices...}

\item{total_scan}{integer, sampling effort. Note that 1/total_scan should be relatively small, increasingly small with increasing precision.}

\item{method}{Character scalar, specify if the function should use a whole group or a focal scan sampling method (or both).}

\item{focal.list}{Character vector, indicate the list of focals to consider throughout the scans.}

\item{scaled}{logical, specifies if adjacency data should be scaled by sampling effort.}

\item{mode}{Character scalar, specifies how igraph should interpret the supplied matrix. See also the weighted argument, the interpretation depends on that too. Possible values are: directed, undirected, upper, lower, max, min, plus. See details \link[igraph]{graph_from_adjacency_matrix}.}

\item{output}{Character scalar, specify if the function should return the list of scans, or reduce them into the bootstrapped adjacency matrix}

\item{n.cores}{number of threads to use while performingh the bootstrap}

\item{cl}{Optional cluster object (cf snow package), experimentally set to put the makeCluster and stopCluster out of the bootable function. (WIP, next implementation should rethink this).}
}
\value{
according to output a list of scans, or the bootstrapped adjacency matrix
}
\description{
Bootstrap scans
Perform a bootstrap of group scans with probabilities derived from a provided adjancecy matrix, to produce a new adjancecy matrix.
}
\examples{
set.seed(42)

n<- 5;nodes<- letters[1:n];
Adj<- matrix(data = 0,nrow = n,ncol = n,dimnames = list(nodes,nodes))
Adj[non.diagonal(Adj)]<- sample(0:80,n*(n-1),replace = TRUE)
Adj

focal.list<- sample(nodes,80,replace = TRUE)
table(focal.list)
Boot_scan(Adj,80,scaled = FALSE,method = "group",output = "adj",n.cores = 1)
Boot_scan(Adj,80,focal.list,scaled = TRUE,
                method = "focal",mode = "directed",output = "list",n.cores = 1)

Bootstrap<- lapply(
  1:5,
    function(b){
        Boot_scan(Adj = Adj,total_scan = 80,focal.list = focal.list,scaled = TRUE,
                        method = "both",mode = "directed",output = "adj",n.cores = 1)
    }
)
}
