% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Bootstrap_tools.R
\name{generate.null.adj}
\alias{generate.null.adj}
\title{Generate a random matrix as a null following similarly designed matrix generation
used in adj_gof}
\usage{
generate.null.adj(
  Adj,
  total_scan,
  Adj.subfun = non.diagonal,
  scaled = TRUE,
  mode = c("directed", "undirected", "max", "min", "upper", "lower", "plus")
)
}
\arguments{
\item{Adj}{square integers matrix of occurences of dyads. Optional if using presence.prob. Update: now if presence prob is passed as Adj (thus all(Adj<1) is TRUE), it will be rightfully assigned to presence.prob. WIP: implement method for association matrices...}

\item{total_scan}{integer, sampling effort. Note that 1/total_scan should be relatively small, increasingly small with increasing precision. Optional if using presence.prob.}

\item{Adj.subfun}{subsetting function of the adjacency matrix. Driven by igraph "mode" argument}

\item{scaled}{logical, specifies if adjacency data should be scaled by sampling effort.}

\item{mode}{Character scalar, specifies how igraph should interpret the supplied matrix. Default here is directed. Possible values are: directed, undirected, upper, lower, max, min, plus. Added vector too. See details \link[igraph]{graph_from_adjacency_matrix}.}
}
\value{
a weighted adjacency matrix randomly drawn from binomial trials, comparably to how adjacency matrices are simulated with iterate_scans()
}
\description{
Generate a random matrix as a null following similarly designed matrix generation
used in adj_gof
}
\examples{
# internal use in adj_gof
}
